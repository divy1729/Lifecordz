{"ast":null,"code":"var _jsxFileName = \"/Users/divyanshsaxena/Desktop/Lifecordz/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const login = useCallback(async (email, password) => {\n    try {\n      console.log('Sending login request with:', {\n        email,\n        password\n      });\n      const response = await fetch('http://localhost:8081/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      console.log('Login response:', data);\n      if (!response.ok) {\n        throw new Error(data.message || 'Login failed');\n      }\n      setUser(data.user);\n      setToken(data.token);\n      localStorage.setItem('token', data.token);\n\n      // ✅ Store user role\n      if (data.user && data.user.role) {\n        localStorage.setItem('role', data.user.role); // Save role for redirection\n      }\n      return data;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  }, []);\n  const register = useCallback(async userData => {\n    try {\n      const response = await fetch('http://localhost:8081/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        throw new Error('Registration failed');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  }, []);\n  const logout = useCallback(() => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n  }, []);\n  const verifyOtp = useCallback(async (email, otp) => {\n    try {\n      const response = await fetch(`http://localhost:8081/api/auth/verify-otp?email=${email}&otp=${otp}`, {\n        method: 'POST'\n      });\n      if (!response.ok) {\n        throw new Error('OTP verification failed');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('OTP verification error:', error);\n      throw error;\n    }\n  }, []);\n\n  // Add a getToken function to centralize token retrieval\n  const getToken = () => {\n    return localStorage.getItem('token');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      register,\n      logout,\n      verifyOtp,\n      getToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"sGVJnayajlFjIs14J/J+M2gqijU=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","login","email","password","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","setItem","role","error","register","userData","logout","removeItem","verifyOtp","otp","getToken","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/Users/divyanshsaxena/Desktop/Lifecordz/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [token, setToken] = useState(localStorage.getItem('token'));\n\n    const login = useCallback(async (email, password) => {\n        try {\n            console.log('Sending login request with:', { email, password });\n    \n            const response = await fetch('http://localhost:8081/api/auth/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ email, password }),\n            });\n    \n            const data = await response.json();\n            console.log('Login response:', data);\n    \n            if (!response.ok) {\n                throw new Error(data.message || 'Login failed');\n            }\n    \n            setUser(data.user);\n            setToken(data.token);\n            localStorage.setItem('token', data.token);\n    \n            // ✅ Store user role\n            if (data.user && data.user.role) {\n                localStorage.setItem('role', data.user.role); // Save role for redirection\n            }\n    \n            return data;\n        } catch (error) {\n            console.error('Login error:', error);\n            throw error;\n        }\n    }, []);\n    \n\n    const register = useCallback(async (userData) => {\n        try {\n            const response = await fetch('http://localhost:8081/api/auth/register', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(userData),\n            });\n\n            if (!response.ok) {\n                throw new Error('Registration failed');\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error('Registration error:', error);\n            throw error;\n        }\n    }, []);\n\n    const logout = useCallback(() => {\n        setUser(null);\n        setToken(null);\n        localStorage.removeItem('token');\n    }, []);\n\n    const verifyOtp = useCallback(async (email, otp) => {\n        try {\n            const response = await fetch(`http://localhost:8081/api/auth/verify-otp?email=${email}&otp=${otp}`, {\n                method: 'POST',\n            });\n\n            if (!response.ok) {\n                throw new Error('OTP verification failed');\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error('OTP verification error:', error);\n            throw error;\n        }\n    }, []);\n\n    // Add a getToken function to centralize token retrieval\n    const getToken = () => {\n        return localStorage.getItem('token');\n    };\n\n    return (\n        <AuthContext.Provider value={{ user, token, login, register, logout, verifyOtp, getToken }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACY,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAEjE,MAAMC,KAAK,GAAGb,WAAW,CAAC,OAAOc,KAAK,EAAEC,QAAQ,KAAK;IACjD,IAAI;MACAC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MAE/D,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEV,KAAK;UAAEC;QAAS,CAAC;MAC5C,CAAC,CAAC;MAEF,MAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCV,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEQ,IAAI,CAAC;MAEpC,IAAI,CAACP,QAAQ,CAACS,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,cAAc,CAAC;MACnD;MAEArB,OAAO,CAACiB,IAAI,CAAClB,IAAI,CAAC;MAClBG,QAAQ,CAACe,IAAI,CAAChB,KAAK,CAAC;MACpBE,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAEL,IAAI,CAAChB,KAAK,CAAC;;MAEzC;MACA,IAAIgB,IAAI,CAAClB,IAAI,IAAIkB,IAAI,CAAClB,IAAI,CAACwB,IAAI,EAAE;QAC7BpB,YAAY,CAACmB,OAAO,CAAC,MAAM,EAAEL,IAAI,CAAClB,IAAI,CAACwB,IAAI,CAAC,CAAC,CAAC;MAClD;MAEA,OAAON,IAAI;IACf,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZhB,OAAO,CAACgB,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,MAAMA,KAAK;IACf;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMC,QAAQ,GAAGjC,WAAW,CAAC,MAAOkC,QAAQ,IAAK;IAC7C,IAAI;MACA,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACU,QAAQ;MACjC,CAAC,CAAC;MAEF,IAAI,CAAChB,QAAQ,CAACS,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;MAC1C;MAEA,OAAO,MAAMV,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZhB,OAAO,CAACgB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACf;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,MAAM,GAAGnC,WAAW,CAAC,MAAM;IAC7BQ,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,IAAI,CAAC;IACdC,YAAY,CAACyB,UAAU,CAAC,OAAO,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,SAAS,GAAGrC,WAAW,CAAC,OAAOc,KAAK,EAAEwB,GAAG,KAAK;IAChD,IAAI;MACA,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmDL,KAAK,QAAQwB,GAAG,EAAE,EAAE;QAChGlB,MAAM,EAAE;MACZ,CAAC,CAAC;MAEF,IAAI,CAACF,QAAQ,CAACS,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC9C;MAEA,OAAO,MAAMV,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZhB,OAAO,CAACgB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACf;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,QAAQ,GAAGA,CAAA,KAAM;IACnB,OAAO5B,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACxC,CAAC;EAED,oBACIV,OAAA,CAACC,WAAW,CAACqC,QAAQ;IAACC,KAAK,EAAE;MAAElC,IAAI;MAAEE,KAAK;MAAEI,KAAK;MAAEoB,QAAQ;MAAEE,MAAM;MAAEE,SAAS;MAAEE;IAAS,CAAE;IAAAlC,QAAA,EACtFA;EAAQ;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACvC,EAAA,CA9FWF,YAAY;AAAA0C,EAAA,GAAZ1C,YAAY;AAgGzB,OAAO,MAAM2C,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAGnD,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAAC8C,OAAO,EAAE;IACV,MAAM,IAAIrB,KAAK,CAAC,6CAA6C,CAAC;EAClE;EACA,OAAOqB,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}