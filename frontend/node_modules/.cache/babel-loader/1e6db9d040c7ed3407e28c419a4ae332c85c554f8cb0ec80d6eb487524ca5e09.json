{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/auth';\n\n// Create axios instance with interceptors\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api'\n});\n\n// Centralize token retrieval\nconst getToken = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  return (user === null || user === void 0 ? void 0 : user.token) || null;\n};\n\n// Update axios interceptor to use centralized token retrieval\napi.interceptors.request.use(config => {\n  const token = getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle 401 errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('user');\n    window.location = '/login';\n  }\n  return Promise.reject(error);\n});\nconst register = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}/register`, userData);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nconst login = async credentials => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, credentials);\n    if (response.data.token) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n    }\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nconst verifyOtp = async (email, otp) => {\n  try {\n    const response = await axios.post(`${API_URL}/verify-otp`, null, {\n      params: {\n        email,\n        otp\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nconst resendOtp = async email => {\n  try {\n    const response = await axios.post(`${API_URL}/resend-otp`, null, {\n      params: {\n        email\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nconst logout = () => {\n  localStorage.removeItem('user');\n};\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem('user'));\n};\nconst authService = {\n  register,\n  login,\n  verifyOtp,\n  resendOtp,\n  logout,\n  getCurrentUser,\n  getToken\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","getToken","user","JSON","parse","localStorage","getItem","token","interceptors","request","use","config","headers","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","register","userData","post","data","login","credentials","setItem","stringify","verifyOtp","email","otp","params","resendOtp","logout","getCurrentUser","authService"],"sources":["/Users/divyanshsaxena/Desktop/Lifecordz/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api/auth';\n\n// Create axios instance with interceptors\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api'\n});\n\n// Centralize token retrieval\nconst getToken = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  return user?.token || null;\n};\n\n// Update axios interceptor to use centralized token retrieval\napi.interceptors.request.use(config => {\n  const token = getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle 401 errors\napi.interceptors.response.use(response => response, error => {\n  if (error.response?.status === 401) {\n    localStorage.removeItem('user');\n    window.location = '/login';\n  }\n  return Promise.reject(error);\n});\n\nconst register = async (userData) => {\n  try {\n    const response = await axios.post(`${API_URL}/register`, userData);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\nconst login = async (credentials) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, credentials);\n    if (response.data.token) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n    }\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\nconst verifyOtp = async (email, otp) => {\n  try {\n    const response = await axios.post(`${API_URL}/verify-otp`, null, {\n      params: { email, otp }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\nconst resendOtp = async (email) => {\n  try {\n    const response = await axios.post(`${API_URL}/resend-otp`, null, {\n      params: { email }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\nconst logout = () => {\n  localStorage.removeItem('user');\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem('user'));\n};\n\nconst authService = {\n  register,\n  login,\n  verifyOtp,\n  resendOtp,\n  logout,\n  getCurrentUser,\n  getToken,\n};\n\nexport default authService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}